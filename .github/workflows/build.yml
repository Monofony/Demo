name: Build

env:
    APP_ENV: test
    DATABASE_URL: mysql://root:root@127.0.0.1:3306/monofony_demo

on:
    push: ~
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday

jobs:
    tests:
        runs-on: ubuntu-latest
        name: "Build and test"
        strategy:
            fail-fast: false
        steps:
            -
                uses: actions/checkout@v2
            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
                    collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
                    mysql version: '5.7' # Optional, default value is "latest". The version of the MySQL
                    mysql database: 'monofony_demo'
                    mysql root password: root
            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "7.3"
                    coverage: none

            -
                name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-
            -
                name: Install dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress --no-suggest
            -
                name: Dump env vars
                run: composer dump-env test

            -
                name: Cache Node packages
                uses: actions/cache@v2
                with:
                    path: '**/node_modules'
                    key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
            -
                name: Install node packages
                if: steps.yarn-cache.outputs.cache-hit != 'true'
                run: |
                    yarn install
                    yarn build
            -
                name: Install database
                run: bin/console doctrine:migration:migrate -n -vv

            -
                name: Build cache for phpsptan
                run: APP_DEBUG=1 APP_ENV=dev bin/console cache:warmup -vvv # For PHPStan

            -
                name: Download and configure Symfony CLI
                run: wget https://get.symfony.com/cli/installer -O - | bash

            -
                name: Download and configure Chromedriver
                run: |
                    curl http://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip > chromedriver.zip
                    unzip chromedriver.zip
                    chmod +x chromedriver

            -
                name: Download and configure Selenium
                run: |
                    curl http://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar > selenium.jar

            -
                name: Configure display
                run: |
                    /sbin/start-stop-daemon --start --quiet --pidfile /tmp/xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 2880x1800x16
                    export DISPLAY=:99

            -
                name: Run Chromedriver
                run: chromedriver > /dev/null 2>&1 &

            -
                name: Run Selenium
                run: java -Dwebdriver.chrome.driver=chromedriver -jar selenium.jar > /dev/null 2>&1 &

            -
                name: Run webserver
                run: |
                    /home/runner/.symfony/bin/symfony server:ca:install
                    /home/runner/.symfony/bin/symfony server:start --port=8080 --dir=public --force-php-discovery --daemon

            # Tests
            -
                name: Composer validate
                run: composer validate --strict
            -
                name: Sexurity check
                run: vendor/bin/security-checker security:check
            -
                name: Schema validation
                run: bin/console doctrine:schema:validate -vvv
            -
                name: Validate coding standard
                run: vendor/bin/ecs check src tests
            -
                name: Test phpspec
                run: phpdbg -qrr vendor/bin/phpspec run --no-interaction -f dot
            -
                name: Test phpstan
                run: vendor/bin/phpstan analyse -c phpstan.neon -l 1 src
            -
                name: Test psalm
                run: vendor/bin/psalm --show-info=false
            -
                name: Test phpunit
                run: vendor/bin/phpunit
            -
                name: Test app install
                run: bin/console app:install --no-interaction -vvv
            -
                name: Test fixtures
                run: bin/console sylius:fixtures:load default --no-interaction
            -
                name: Test Behat
                run: vendor/bin/behat --strict -vvv --no-interaction -f progress || vendor/bin/behat --strict -vvv --no-interaction -f progress --rerun
            -
                name: Test Doctrine migrations
                run: (bin/console doctrine:migrations:migrate first --no-interaction && bin/console doctrine:migrations:migrate latest --no-interaction)
